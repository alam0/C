Lab #9 Report
	
	From the user perspective, the program creates a window and individually displays 7 different kinds of fractals when the number keys 1 through 7 are pressed. If the user presses the 'q' key the program will end.
	From the programmer's perspective, the program is structured in order of libraries included, function prototypes, main, and function definitions. The main function contains the command to open a suitable window and then a while loop that loops until the user presses q. User keyboard input is read through gfx_wait() and a case structure. Each case from 1 through 7 is designated for one of the 7 fractals, and contains variable values and the recursive function for the respective fractal. In the function definitions, each recursive function has a Base case, a Draw call or Drawfunction call, and Recursive calls. Generally the base case for the functions is when a certain length gets too small.
	The sierpinski triangle function was provided for us and it initially uses 3 points and draws a triangle a triangle drawing function that contained 3 gfx_line functions. It then recursively calls the sierpinski function 3 times with new variables based initial points and midpoints.
	The shrinkingSquares function is quite similar to the sierpinski triangle function, but it involves an extra point. It includes a square drawing function with 4 gfx_line functions, and recursively calls the shrinkingSquares function 4 times based on new points obtained from addition/subtraction of a variable s which is 1/5 of the previous square's sidelength.
	The spiralSquares function is a special one because the sidelengths of the squares increase so the base case is when sidelength is too large(>50). It also uses the square drawing function, angle incrementation, and one recursive call of spiralSquares.
	The circularLace function involved a shrinking radius r and an angle of 2PI/6 radians. Since there are 6 recursive calls in the function, I used a for loop and incremented the angle with each loop. I used the same method that I did in carnival.c in lab 7.
	The snowflake function is similar to the circularLace function in which length of the snowflake arms (r) shrunk and there was an angle of 2PI/5 radians. There is a loop for 5 gfx_line functions and another loop for 5 recursive calls.
	The tree function and fern functions involved the same ideas. Both had one gfx_line function to draw and then 2 recursive calls for the tree, and 8 for the fern. They also included a shrinking arm length and changing angle.
	I verified the program for correctness by repeatedly checking results in the gfx window and comparing them to the examples provided on the lab webpage.
